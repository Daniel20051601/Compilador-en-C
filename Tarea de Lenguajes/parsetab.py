
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTIMESDIVIDEleftPLUSMINUSleftLTLEGTGEEQNEQrightEQUALSCOMMA DIVIDE ELSE EQ EQUALS GE GT ID IF LBRACE LE LPAREN LT MINUS NEQ NUMBER PLUS RBRACE RETURN RPAREN SEMICOLON TIMES TYPE TYPEprogram : function_listfunction_list : function_list function\n                     | functionfunction : TYPE ID LPAREN RPAREN compound_stmtcompound_stmt : LBRACE stmt_list RBRACEstmt_list : stmt_list stmt\n                 | emptystmt : declaration\n            | if_stmt\n            | return_stmt\n            | expression_stmtdeclaration : TYPE ID SEMICOLON\n                   | TYPE ID EQUALS expression SEMICOLONif_stmt : IF LPAREN expression RPAREN stmt\n               | IF LPAREN expression RPAREN stmt ELSE stmtreturn_stmt : RETURN expression SEMICOLONexpression_stmt : expression SEMICOLONexpression : ID EQUALS expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression LT expression\n                  | expression LE expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression EQ expression\n                  | expression NEQ expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : IDempty :'
    
_lr_action_items = {'TYPE':([0,2,3,5,9,10,11,12,13,14,15,16,17,18,28,42,57,59,60,61,62,63,],[4,4,-3,-2,-4,-32,19,-7,-5,-6,-8,-9,-10,-11,-17,-12,-16,19,-13,-14,19,-15,]),'$end':([1,2,3,5,9,13,],[0,-1,-3,-2,-4,-5,]),'ID':([4,10,11,12,14,15,16,17,18,19,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,57,59,60,61,62,63,],[6,-32,20,-7,-6,-8,-9,-10,-11,26,20,20,20,-17,20,20,20,20,20,20,20,20,20,20,20,-12,20,-16,20,-13,-14,20,-15,]),'LPAREN':([6,10,11,12,14,15,16,17,18,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,57,59,60,61,62,63,],[7,-32,23,-7,-6,-8,-9,-10,-11,39,23,23,23,-17,23,23,23,23,23,23,23,23,23,23,23,-12,23,-16,23,-13,-14,23,-15,]),'RPAREN':([7,20,25,40,44,45,46,47,48,49,50,51,52,53,54,55,56,],[8,-31,-30,56,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,59,-29,]),'LBRACE':([8,],[10,]),'RBRACE':([10,11,12,14,15,16,17,18,28,42,57,60,61,63,],[-32,13,-7,-6,-8,-9,-10,-11,-17,-12,-16,-13,-14,-15,]),'IF':([10,11,12,14,15,16,17,18,28,42,57,59,60,61,62,63,],[-32,22,-7,-6,-8,-9,-10,-11,-17,-12,-16,22,-13,-14,22,-15,]),'RETURN':([10,11,12,14,15,16,17,18,28,42,57,59,60,61,62,63,],[-32,24,-7,-6,-8,-9,-10,-11,-17,-12,-16,24,-13,-14,24,-15,]),'NUMBER':([10,11,12,14,15,16,17,18,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,57,59,60,61,62,63,],[-32,25,-7,-6,-8,-9,-10,-11,25,25,25,-17,25,25,25,25,25,25,25,25,25,25,25,-12,25,-16,25,-13,-14,25,-15,]),'ELSE':([15,16,17,18,28,42,57,60,61,63,],[-8,-9,-10,-11,-17,-12,-16,-13,62,-15,]),'EQUALS':([20,26,],[27,43,]),'SEMICOLON':([20,21,25,26,41,44,45,46,47,48,49,50,51,52,53,54,56,58,],[-31,28,-30,42,57,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,60,]),'PLUS':([20,21,25,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-31,29,-30,29,29,-18,-19,-20,29,29,-23,-24,-25,-26,-27,-28,29,-29,29,]),'MINUS':([20,21,25,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-31,30,-30,30,30,-18,-19,-20,30,30,-23,-24,-25,-26,-27,-28,30,-29,30,]),'TIMES':([20,21,25,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-31,31,-30,31,31,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,31,-29,31,]),'DIVIDE':([20,21,25,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-31,32,-30,32,32,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,32,-29,32,]),'LT':([20,21,25,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-31,33,-30,33,33,-18,33,33,33,33,-23,-24,-25,-26,-27,-28,33,-29,33,]),'LE':([20,21,25,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-31,34,-30,34,34,-18,34,34,34,34,-23,-24,-25,-26,-27,-28,34,-29,34,]),'GT':([20,21,25,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-31,35,-30,35,35,-18,35,35,35,35,-23,-24,-25,-26,-27,-28,35,-29,35,]),'GE':([20,21,25,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-31,36,-30,36,36,-18,36,36,36,36,-23,-24,-25,-26,-27,-28,36,-29,36,]),'EQ':([20,21,25,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-31,37,-30,37,37,-18,37,37,37,37,-23,-24,-25,-26,-27,-28,37,-29,37,]),'NEQ':([20,21,25,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-31,38,-30,38,38,-18,38,38,38,38,-23,-24,-25,-26,-27,-28,38,-29,38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function_list':([0,],[2,]),'function':([0,2,],[3,5,]),'compound_stmt':([8,],[9,]),'stmt_list':([10,],[11,]),'empty':([10,],[12,]),'stmt':([11,59,62,],[14,61,63,]),'declaration':([11,59,62,],[15,15,15,]),'if_stmt':([11,59,62,],[16,16,16,]),'return_stmt':([11,59,62,],[17,17,17,]),'expression_stmt':([11,59,62,],[18,18,18,]),'expression':([11,23,24,27,29,30,31,32,33,34,35,36,37,38,39,43,59,62,],[21,40,41,44,45,46,47,48,49,50,51,52,53,54,55,58,21,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_list','program',1,'p_program','parser.py',22),
  ('function_list -> function_list function','function_list',2,'p_function_list','parser.py',26),
  ('function_list -> function','function_list',1,'p_function_list','parser.py',27),
  ('function -> TYPE ID LPAREN RPAREN compound_stmt','function',5,'p_function','parser.py',32),
  ('compound_stmt -> LBRACE stmt_list RBRACE','compound_stmt',3,'p_compound_stmt','parser.py',36),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','parser.py',40),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list','parser.py',41),
  ('stmt -> declaration','stmt',1,'p_stmt','parser.py',45),
  ('stmt -> if_stmt','stmt',1,'p_stmt','parser.py',46),
  ('stmt -> return_stmt','stmt',1,'p_stmt','parser.py',47),
  ('stmt -> expression_stmt','stmt',1,'p_stmt','parser.py',48),
  ('declaration -> TYPE ID SEMICOLON','declaration',3,'p_declaration','parser.py',54),
  ('declaration -> TYPE ID EQUALS expression SEMICOLON','declaration',5,'p_declaration','parser.py',55),
  ('if_stmt -> IF LPAREN expression RPAREN stmt','if_stmt',5,'p_if_stmt','parser.py',60),
  ('if_stmt -> IF LPAREN expression RPAREN stmt ELSE stmt','if_stmt',7,'p_if_stmt','parser.py',61),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt','parser.py',66),
  ('expression_stmt -> expression SEMICOLON','expression_stmt',2,'p_expression_stmt','parser.py',71),
  ('expression -> ID EQUALS expression','expression',3,'p_expression_assign','parser.py',76),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',80),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',81),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',82),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',83),
  ('expression -> expression LT expression','expression',3,'p_expression_relop','parser.py',87),
  ('expression -> expression LE expression','expression',3,'p_expression_relop','parser.py',88),
  ('expression -> expression GT expression','expression',3,'p_expression_relop','parser.py',89),
  ('expression -> expression GE expression','expression',3,'p_expression_relop','parser.py',90),
  ('expression -> expression EQ expression','expression',3,'p_expression_relop','parser.py',91),
  ('expression -> expression NEQ expression','expression',3,'p_expression_relop','parser.py',92),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',96),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',100),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',104),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',108),
]
